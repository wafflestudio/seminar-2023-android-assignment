// Generated by view binder compiler. Do not edit!
package com.example.voca.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.voca.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class SpecificVocaListBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView an;

  @NonNull
  public final TextView centense;

  @NonNull
  public final TextView close;

  @NonNull
  public final TextView meaning;

  @NonNull
  public final TextView spell;

  @NonNull
  public final TextView sy;

  private SpecificVocaListBinding(@NonNull LinearLayout rootView, @NonNull TextView an,
      @NonNull TextView centense, @NonNull TextView close, @NonNull TextView meaning,
      @NonNull TextView spell, @NonNull TextView sy) {
    this.rootView = rootView;
    this.an = an;
    this.centense = centense;
    this.close = close;
    this.meaning = meaning;
    this.spell = spell;
    this.sy = sy;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static SpecificVocaListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SpecificVocaListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.specific_voca_list, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SpecificVocaListBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.an;
      TextView an = ViewBindings.findChildViewById(rootView, id);
      if (an == null) {
        break missingId;
      }

      id = R.id.centense;
      TextView centense = ViewBindings.findChildViewById(rootView, id);
      if (centense == null) {
        break missingId;
      }

      id = R.id.close;
      TextView close = ViewBindings.findChildViewById(rootView, id);
      if (close == null) {
        break missingId;
      }

      id = R.id.meaning;
      TextView meaning = ViewBindings.findChildViewById(rootView, id);
      if (meaning == null) {
        break missingId;
      }

      id = R.id.spell;
      TextView spell = ViewBindings.findChildViewById(rootView, id);
      if (spell == null) {
        break missingId;
      }

      id = R.id.sy;
      TextView sy = ViewBindings.findChildViewById(rootView, id);
      if (sy == null) {
        break missingId;
      }

      return new SpecificVocaListBinding((LinearLayout) rootView, an, centense, close, meaning,
          spell, sy);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
